.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "env-diff" "" "" "" ""
.hy
.SH NAME
.PP
env-diff - determine the effect of a command on the shell environment
.SH SYNOPSIS
.IP
.nf
\f[C]
env-diff [OPTIONS] CMD
\f[R]
.fi
.SH DESCRIPTION
.PP
This command produces the most complete report of what \f[V]CMD\f[R]
changes about the current shell environment
.IP \[bu] 2
Environment variables
.IP \[bu] 2
Shell variables (unexported)
.IP \[bu] 2
Shell arrays (associative and normal)
.IP \[bu] 2
Shell functions
.IP \[bu] 2
Shell options (set and shopt)
.IP \[bu] 2
Traps (see caveats)
.PP
For each section where changes arise, changes are separated into three
categories: new items, deleted items, and changed items.
.PP
For new items, the name and value is printed.
For deleted items, only the name is printed.
And for changed items, the values before and after are printed except
for some special cases.
.PP
Special cases include
.IP \[bu] 2
Colon delimited variables like PATH
.IP \[bu] 2
Shell function
.IP \[bu] 2
traps
.PP
For each of theses cases, the values before and after are compared in
the most useful way possible.
Colon delimited lists are compared by showing which elments were kept,
added, and removed (unless \f[V]--list-diff\f[R] is given).
Functions and traps are compared by showing a git-style diff of the
values before and after.
.PP
Also, some shell variables always change.
The variable \f[V]$RANDOM\f[R] is a special variable that asks BASH to
give a random number.
Its value changes every time it is evaluated.
Variables relating to time like \f[V]$EPOCHSECONDS\f[R] (bash 5) and
\f[V]$SECONDS\f[R] will also always change.
.PP
Changes to these variables are not shown in the report unless the
\f[V]--no-ignore\f[R] flag is given.
.SH CONFIGURATION
.PP
A configuration file \f[V]\[ti]/.config/env-diff.yml\f[R] stores
.IP \[bu] 2
Variables to ignore: Some variables change in a way that is irrelevant.
.IP \[bu] 2
What variables to process and display as lists
.PP
The repository comes with an example file that can be copied.
It can contains the toplevel sections:
.IP
.nf
\f[C]
colon_lists:
  - PATH
space_lists:
  - 
ignored_variables:
  - BASH_SUBSHELL
  - RANDOM
ignored_normal_arrays:
  - BASH_LINENO
ignored_assoc_arrays:
  - BASH_CMDS
\f[R]
.fi
.SH OPTIONS
.PP
Note: Options must come before \f[V]CMD\f[R]
.SS \f[V]--list-diff\f[R]
.PP
For \[aq]colon list\[aq] variables, they will be compared using set
comparison which ignores doubles, order, and empty elements (caused by
leading colon, trailing colon, or two consecutive colons).
.SS \f[V]--show-function-bodies\f[R]
.PP
For added functions, show the entire body of the function.
.PP
For modified functions, show an inline diff (like \f[V]git diff\f[R])
between the initial and final versions of the function.
.PP
The function\[aq]s code is obtained using the \f[V]type\f[R] bash
builtin.
It may have minor differences between the actual code in the file where
the function is defined.
.SS \f[V]--no-ignore\f[R]
.PP
Disables the ignoring of changes to certain special variables.
.PP
Some variables are special and change no matter what like
\f[V]BASHPID\f[R] (running \f[V]CMD\f[R] and saving the final state
happens in a subshell where \f[V]BASHPID\f[R] will be different).
.SS \f[V]--keep-tmpdir\f[R]
.PP
Do not delete the temporary directory used to save states before and
after \f[V]CMD\f[R].
These directories can rise to 10M in size if there are a lot of shell
functions.
Each function must be saved in its own file to garantee no parsing
errors.
Although the file may be smaller it has to take one block (usually 4k)
on disc.
.SS \f[V]--local-tmpdir\f[R]
.PP
Create temporary directory ininside current working directory.
.PP
The temporarry directory is normally created inside \f[V]$TMPDIR\f[R]
(or \f[V]/tmp\f[R]) if \f[V]TMPDIR\f[R] is not defined.
.SS \f[V]-F CONFIG_FILE\f[R]
.PP
Specify an alternate config file.
.SS \f[V]--help\f[R]
.PP
Display this manpage and exit
.SH CAVEATS
.SS Traps
.PP
The traps on \f[V]ERR\f[R], \f[V]EXIT\f[R], \f[V]DEBUG\f[R],
\f[V]RETURN\f[R] are special.
Here is some information.
.PP
Since \f[V]env-diff CMD\f[R] runs \f[V]CMD\f[R] in a subshell,
interaction between traps and subshells may cause incorrect results.
However with \f[V]env-diff-save\f[R], there are no subshells.
If you suspect subshells are causing incorrect results, then
.IP
.nf
\f[C]
env-diff-save before
<manipulate traps>
env-diff-save after
env-diff-compare before after
\f[R]
.fi
.PP
will produce more reliable results.
.SS \f[V]EXIT\f[R]
.PP
\f[V]env-diff \[aq]trap \[dq]echo hello\[dq] X\[aq]\f[R] incorrectly
reports the \f[V]EXIT\f[R] trap as for every \f[V]X\f[R] other than
\f[V]EXIT\f[R].
.PP
However \f[V]env-diff \[aq]trap \[dq]echo exit\[dq] EXIT\[aq]\f[R] will
show the correct result.
.SS \f[V]ERR\f[R]
.PP
This trap is not inherited by function unless \f[V]set -E\f[R]
(\f[V]set -o errtrace\f[R]) is activated.
Without \f[V]set -E\f[R] the code that inspects the traps will not see
it.
.SS \f[V]DEBUG\f[R], \f[V]RETURN\f[R]
.PP
These traps are not inherited by functions and subshells unless
\f[V]shopt -s
extdebug\f[R] is used.
.SS Variables and functions
.PP
The BASH portion of this tool defines several shell functions and a few
shell variables.
All functions begin with \f[V]_env-diff\f[R] and all variables that
could be detected begin with \f[V]_env_diff\f[R].
.PP
If \f[V]CMD\f[R] changes one of these functions or variables, it has the
potential to interfere with the operations that happen after
\f[V]CMD\f[R] is run.
.SS Arrays
.PP
Array differences are always detected.
In the case of sparse arrays like the array \f[V]sparse\f[R] constructed
below, the output will be in a format similar to that of
\f[V]declare -p\f[R].
.IP
.nf
\f[C]
$ sparse=(a b c)
$ sparse[100]=d
$ contiguous=(a b c d) 
$ declare -p sparse
declare -a sparse=([0]=\[dq]a\[dq] [1]=\[dq]b\[dq] [2]=\[dq]c\[dq] [100]=\[dq]d\[dq])
$ declare -p contiguous
declare -a contiguous=([0]=\[dq]a\[dq] [1]=\[dq]b\[dq] [2]=\[dq]c\[dq] [3]=\[dq]d\[dq])
\f[R]
.fi
.PP
That way, if an array changes from the value of \f[V]sparse\f[R] to the
value of \f[V]contiguous\f[R], the difference will be shown.
.PP
Arrays that are contiguous are shown in the format of python lists.
.SH SPECIAL VARIABLES
.PP
The following is a list of variables that change automatically.
Most of them can be ignored since their change is just a side effect of
how \f[V]env-diff\f[R] works (\f[V]BASHPID\f[R]), always change
(\f[V]EPOCHREALTIME\f[R], \f[V]RANDOM\f[R]), or represent something that
is checked a different way (\f[V]BASHOPTS\f[R], \f[V]SHELLOPTS\f[R]).
.SS \f[V]BASHOPTS\f[R]
.PP
Colon delimited list containing options set with \f[V]shopt\f[R].
See also \f[V]SHELLOPTS\f[R].
.SS \f[V]BASH_ALIASES\f[R]
.PP
Associative array where keys are alias names and values are alias
definitions.
Since aliases are not compared separately, this is one of the only
variables from this list that we don\[aq]t want to ignore.
.SS \f[V]BASH_CMDS\f[R]
.PP
Associative array representing the internal hash table maintained by the
\f[V]hash\f[R] builtin.
When \f[V]PATH\f[R] is modified, this table is cleared.
.SS \f[V]BASH_LINENO\f[R]
.PP
Array variable describing the line numbers where functions on the call
stack were invoked.
The variable state is saved once before \f[V]CMD\f[R] and once after in
two different places so \f[V]BASH_LINENO[1]\f[R] differs.
.SS \f[V]EPOCHREALTIME\f[R]
.PP
Seconds since the epoch with microsecond decimal precision.
Probably introduced in BASH 5.
.SS \f[V]EPOCHSECONDS\f[R]
.PP
Seconds since the epoch.
.SS \f[V]RANDOM\f[R]
.PP
Returns a random number (0-32767) each time it is evaluated.
.SS \f[V]SECONDS\f[R]
.PP
Returns the seconds since shell invocation.
.SS \f[V]SHELLOPTS\f[R]
.PP
Colon delimited list of active shell options (the ones set with
\f[V]set -o\f[R] or \f[V]shopt -o\f[R]).
.SS \f[V]SRANDOM\f[R]
.PP
Returns a 32 bit random number.
.SH DEPENDENCIES
.IP \[bu] 2
jq
.IP \[bu] 2
standard UNIX tools (sort, comm, cut, cat, mkdir, mktemp)
.IP \[bu] 2
python3
.PP
Optionally if the python package \f[V]pygments\f[R] is available, it
will be used to hightlight the body of new shell functions.
.PP
The python package \f[V]pyyaml\f[R]
(\f[V]python3 -m pip install [--user] pyyaml\f[R]) must be installed to
read the config file \f[V]\[ti]/.config/env-diff.yml\f[R].
.SH AUTHOR
.PP
Philippe Carphin
